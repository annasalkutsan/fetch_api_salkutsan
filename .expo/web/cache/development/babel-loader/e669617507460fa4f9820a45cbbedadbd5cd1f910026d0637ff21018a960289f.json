{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://gorest.co.in/public/v2/users\");\n        var _data = yield response.json();\n        setData(_data);\n      } catch (error) {\n        console.error(\"Ошибка:\", error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchData();\n  }, []);\n  return _jsx(View, {\n    style: styles.main,\n    children: isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#1fda1b\"\n    }) : _jsx(FlatList, {\n      style: styles.list,\n      data: data,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"Name: \", item.name, \" \"]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Email: \", item.email, \" \"]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"ID: \", item.id]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Gender: \", item.gender]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Status: \", item.status]\n          }), _jsx(View, {\n            style: styles.str\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  main: {\n    backgroundColor: \"#5d5d5d\",\n    flex: 1,\n    padding: 30\n  },\n  list: {\n    backgroundColor: \"#ffffff\",\n    padding: 15,\n    borderRadius: 23\n  },\n  text: {\n    color: \"#000000\",\n    fontSize: 14,\n    fontFamily: \"\"\n  },\n  str: {\n    borderBottomColor: \"#1fda1b\",\n    borderBottomWidth: 2.7,\n    padding: 10,\n    bottom: 10\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","ActivityIndicator","FlatList","Text","View","StyleSheet","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","data","setData","fetchData","_ref","_asyncToGenerator","response","fetch","json","error","console","apply","arguments","style","styles","main","children","size","color","list","renderItem","_ref2","item","text","name","email","id","gender","status","str","create","backgroundColor","flex","padding","borderRadius","fontSize","fontFamily","borderBottomColor","borderBottomWidth","bottom"],"sources":["D:/рабочий стол/react native/users_fetch_salkutsan/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, FlatList, Text, View, StyleSheet,} from \"react-native\";\n\ntype Users = {\n  name: string;\n  email: string;\n  id: string;\n  gender: string;\n  status: string;\n};\n\nconst App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<Users[]>([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"https://gorest.co.in/public/v2/users\");\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <View style={styles.main}>\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color=\"#1fda1b\" />\n      ) : (\n        <FlatList\n          style={styles.list}\n          data={data}\n          renderItem={({ item }) => (\n            <View>\n              <Text style={styles.text}>Name: {item.name} </Text>\n              <Text style={styles.text}>Email: {item.email} </Text>\n              <Text style={styles.text}>ID: {item.id}</Text>\n              <Text style={styles.text}>Gender: {item.gender}</Text>\n              <Text style={styles.text}>Status: {item.status}</Text>\n              <View style={styles.str} />\n            </View>\n          )}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    backgroundColor: \"#5d5d5d\",\n    flex: 1,\n    padding: 30,\n  },\n  list: {\n    backgroundColor: \"#ffffff\",\n    padding: 15,\n    borderRadius: 23,\n  },\n  text: {\n    color: \"#000000\",\n    fontSize: 14,\n    fontFamily: \"\",\n  },\n  str: {\n    borderBottomColor: \"#1fda1b\",\n    borderBottomWidth: 2.7,\n    padding: 10,\n    bottom: 10,\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}